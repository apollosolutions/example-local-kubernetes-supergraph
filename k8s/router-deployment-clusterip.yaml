---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apollo-router
  namespace: ${NAMESPACE}
  labels:
    app: apollo-router
spec:
  replicas: ${ROUTER_REPLICAS}
  selector:
    matchLabels:
      app: apollo-router
  template:
    metadata:
      labels:
        app: apollo-router
    spec:
      containers:
      - name: apollo-router
        image: ghcr.io/apollographql/router:v2.5.0
        ports:
          - containerPort: 4000
            name: graphql
          - containerPort: 8088
            name: health
        env:
          - name: APOLLO_GRAPH_REF
            value: "${APOLLO_GRAPH_REF}"
          - name: APOLLO_KEY
            value: "${APOLLO_KEY}"
          - name: PORT
            value: "4000"
        volumeMounts:
          - name: router-config
            mountPath: /dist/config.yaml
            subPath: config.yaml
          - name: supergraph-schema
            mountPath: /dist/supergraph.graphql
            subPath: supergraph.graphql
        args:
          - "--config"
          - "/dist/config.yaml"
          - "--supergraph"
          - "/dist/supergraph.graphql"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8088
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8088
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
        - name: router-config
          configMap:
            name: router-config
        - name: supergraph-schema
          configMap:
            name: supergraph-schema
---
apiVersion: v1
kind: Service
metadata:
  name: apollo-router-service
  namespace: ${NAMESPACE}
  labels:
    app: apollo-router
spec:
  selector:
    app: apollo-router
  ports:
    - name: graphql
      port: 4000
      targetPort: 4000
    - name: health
      port: 8088
      targetPort: 8088
  type: ClusterIP
